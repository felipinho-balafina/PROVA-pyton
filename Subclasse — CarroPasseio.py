# üöó Subclasse ‚Äî CarroPasseio

class CarroPasseio(Veiculo):
    #Representa um carro de passeio, herdando as caracter√≠sticas de veiculo.
    def __init__(self, marca, modelo, ano_fabricacao, chassi, cor, quilometragem, numero_portas, tipo_combustivel):
        super().__init__(marca, modelo, ano_fabricacao, chassi, cor, quilometragem)
        self._numero_portas = numero_portas
        self._tipo_combustivel = tipo_combustivel
   
   # M√©todo: Calcular Deprecia√ß√£o
    # ---
    def calcular_depreciacao(self, anos_uso, taxa_extra): #Calcula a deprecia√ß√£o com base no tempo de uso e taxa extra.
        depreciacao = (0.05 + taxa_extra) * anos_uso
        print(f"[DEPRECIA√á√ÉO] O carro {self._modelo} teve uma deprecia√ß√£o de {depreciacao * 100:.1f}% ap√≥s {anos_uso} anos.")
        return depreciacao

     # M√©todo Sobrescrito: Exibir Informa√ß√µes
    # ---
    def exibir_informacoes(self, detalhado=False): #Exibe informa√ß√µes do carro de passeio, incluindo seus atributos espec√≠ficos.
        super().exibir_informacoes(detalhado)
        if detalhado:
            print(f"N√∫mero de Portas: {self._numero_portas}")
            print(f"Tipo de Combust√≠vel: {self._tipo_combustivel}")
